version: '3.8'

services:
  db:
    image: postgres:16.6
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "123"  # Пароль в кавычках, если содержит цифры
      POSTGRES_DB: rushydro
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rushydro"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backEnd  # Путь к папке с Dockerfile бэкенда
    ports:
      - "8081:8081"  # Пробрасываем порт бэкенда
    depends_on:
      db:
        condition: service_healthy
    environment:  # Правильное форматирование environment
      SPRING_DATASOURCE_URL: "jdbc:p6spy:postgresql://db:5432/rushydro"
      SPRING_DATASOURCE_USERNAME: "postgres"
      SPRING_DATASOURCE_PASSWORD: "123"  # Всегда в кавычках!

  frontend:
    build:
      context: ./front  # Путь к папке с Dockerfile фронтенда
#      dockerfile: Dockerfile  # Или укажите другой файл, если нужно
    container_name: front
    ports:
      - "8080:8080"  # Пробрасываем порт фронтенда
    depends_on:
      - backend  # Фронтенд запустится только после бэкенда
    restart: unless-stopped


  selenium-hub:
    image: selenium/hub:4.15.0
    ports:
      - "4444:4444"
    networks:
      - selenium-network # Выделенная сеть для Selenium

  chrome:
    image: selenium/node-chrome:4.15.0
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - selenium-network

  autocrawling:
    build:
      context: ./autoCrawling  # Изменено на папку autoCrawling
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - db
      - selenium-hub
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - default
      - selenium-network

networks:
  selenium-network:
    driver: bridge

volumes:
  postgres_data: